1174. Immediate Food Delivery II

Table: Delivery

+-----------------------------+---------+
| Column Name                 | Type    |
+-----------------------------+---------+
| delivery_id                 | int     |
| customer_id                 | int     |
| order_date                  | date    |
| customer_pref_delivery_date | date    |
+-----------------------------+---------+

delivery_id is the primary key of this table.

The table holds information about food delivery to customers that make orders at some date and specify a preferred delivery date 
(on the same order date or after it).
 
If the preferred delivery date of the customer is the same as the order date then the order is called immediate otherwise it's called scheduled.

The first order of a customer is the order with the earliest order date that customer made. It is guaranteed that a customer has exactly one first order.

Write an SQL query to find the percentage of immediate orders in the first orders of all customers, rounded to 2 decimal places.

The query result format is in the following example:

Delivery table:
+-------------+-------------+------------+-----------------------------+
| delivery_id | customer_id | order_date | customer_pref_delivery_date |
+-------------+-------------+------------+-----------------------------+
| 1           | 1           | 2019-08-01 | 2019-08-02                  |
| 2           | 2           | 2019-08-02 | 2019-08-02                  |
| 3           | 1           | 2019-08-11 | 2019-08-12                  |
| 4           | 3           | 2019-08-24 | 2019-08-24                  |
| 5           | 3           | 2019-08-21 | 2019-08-22                  |
| 6           | 2           | 2019-08-11 | 2019-08-13                  |
| 7           | 4           | 2019-08-09 | 2019-08-09                  |
+-------------+-------------+------------+-----------------------------+

Result table:
+----------------------+
| immediate_percentage |
+----------------------+
| 50.00                |
+----------------------+
The customer id 1 has a first order with delivery id 1 and it is scheduled.
The customer id 2 has a first order with delivery id 2 and it is immediate.
The customer id 3 has a first order with delivery id 5 and it is scheduled.
The customer id 4 has a first order with delivery id 7 and it is immediate.
Hence, half the customers have immediate first orders.
 

========================
schema:
========================

drop table M_1174_Delivery
create table M_1174_Delivery (
delivery_id                  int ,
customer_id                  int ,
order_date                   date,
customer_pref_delivery_date  date
)

insert into  M_1174_Delivery  (delivery_id ,  customer_id , order_date, customer_pref_delivery_date)
values
(1 ,1  , '2019-08-01', '2019-08-02'),
(2 ,2  , '2019-08-02', '2019-08-02'),
(3 ,1  , '2019-08-11', '2019-08-12'),
(4 ,3  , '2019-08-24', '2019-08-24'),
(5 ,3  , '2019-08-21', '2019-08-22'),
(6 ,2  , '2019-08-11', '2019-08-13'),
(7 ,4  , '2019-08-09', '2019-08-09')



========================
solution:
========================

========================
SQL Server
========================

with firstOrderDate as (
	select 
		customer_id, 
		min(order_date) as order_date
	from M_1174_Delivery
	group by customer_id), 
base  as (
	select 
		m.* 
	from firstOrderDate, 
		M_1174_Delivery m 
	where firstOrderDate.customer_id = m.customer_id
	and firstOrderDate.order_date = m.order_date ),
total as (
	select count(*) as number  from base),
eqtotal as (
	select count(*) as eqnumber from base where order_date = customer_pref_delivery_date)
select 
	round(cast(eqnumber*1.0/number*100 as decimal(6,2)), 2) as immediate_percentage
from total, eqtotal 
