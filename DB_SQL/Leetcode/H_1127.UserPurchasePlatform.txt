1127.(Hard) User Purchase Platform
https://leetcode.com/problems/user-purchase-platform

================================================================================
1127.(Hard) User Purchase Platform
================================================================================

Spending table:
+---------+------------+----------+--------+
| user_id | spend_date | platform | amount |
+---------+------------+----------+--------+
| 1       | 2019-07-01 | mobile   | 100    |
| 1       | 2019-07-01 | desktop  | 100    |
| 2       | 2019-07-01 | mobile   | 100    |
| 2       | 2019-07-02 | mobile   | 100    |
| 3       | 2019-07-01 | desktop  | 100    |
| 3       | 2019-07-02 | desktop  | 100    |
+---------+------------+----------+--------+

Result table:
+------------+----------+--------------+-------------+
| spend_date | platform | total_amount | total_users |
+------------+----------+--------------+-------------+
| 2019-07-01 | desktop  | 100          | 1           |
| 2019-07-01 | mobile   | 100          | 1           |
| 2019-07-01 | both     | 200          | 1           |
| 2019-07-02 | desktop  | 100          | 1           |
| 2019-07-02 | mobile   | 100          | 1           |
| 2019-07-02 | both     | 0            | 0           |
+------------+----------+--------------+-------------+


========================
schema:
========================
Create table L_1127_Spending (user_id int, spend_date Date,  platform varchar(30),  amount int);
Truncate table L_1127_Spending;
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (1, '2019-07-01', 'mobile', 100);
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (1, '2019-07-01', 'desktop', 100);
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (2, '2019-07-01', 'mobile', 100);
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (2, '2019-07-02', 'mobile', 100);
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (3, '2019-07-01', 'desktop', 100);
insert into L_1127_Spending (user_id, spend_date,  platform,  amount) values (3, '2019-07-02', 'desktop', 100);



========================
solution:
========================

select 
s1.spend_date, count(s2.amount) as total_amount,  count(s2.user_id) as total_users
from L_1127_Spending s1 left join L_1127_Spending s2 on s1.user_id = s2.user_id and s1.spend_date = s2.spend_date
where s1.platform = 'mobile' and s2.platform = 'desktop'
group by s1.spend_date



========================
MYSQL:  ?????
========================

SELECT aa.spend_date,
       aa.platform,
       COALESCE(bb.total_amount, 0) total_amount,
       COALESCE(bb.total_users,0) total_users
FROM
    (SELECT DISTINCT(spend_date), a.platform   -- table aa
    FROM L_1127_Spending, 
        (SELECT 'desktop' AS platform UNION
        SELECT 'mobile' AS platform UNION
        SELECT 'both' AS platform
        ) a
    ) aa
    LEFT JOIN
    (SELECT spend_date,                      -- table bb
            platform,
            SUM(amount) total_amount,
            COUNT(user_id) total_users
    FROM
        (SELECT spend_date,
                user_id,
                (CASE COUNT(DISTINCT platform)
                    WHEN 1 THEN platform
                    WHEN 2 THEN 'both'
                    END) platform,
                SUM(amount) amount
        FROM L_1127_Spending
        GROUP BY spend_date, user_id, platform
        ) b
    GROUP BY spend_date, platform
    ) bb   ON aa.platform = bb.platform AND	aa.spend_date = bb.spend_date
order by  aa.spend_date
	


统计每天每个平台的交易额和用户数, "双平台同时消费的用户"分开统计.
难点: 1. 需要为platform字段构造一个'both'值, 这里用了CASE WHEN END语句 2. 即使某天没有"双平台同时消费的用户"也要显示
这里在"table aa"里组合了所有 spend_date 和 platform, 然后LEFT JOIN保证每天都有3个platform项
再用 COALESCE 语句把NULL值替换成0

SELECT aa.spend_date,
       aa.platform,
       COALESCE(bb.total_amount, 0) total_amount,
       COALESCE(bb.total_users,0) total_users
FROM
    (SELECT DISTINCT(spend_date), a.platform   -- table aa
    FROM L_1127_Spending JOIN
        (SELECT 'desktop' AS platform UNION
        SELECT 'mobile' AS platform UNION
        SELECT 'both' AS platform
        ) a
    ) aa
    LEFT JOIN
    (SELECT spend_date,                      -- table bb
            platform,
            SUM(amount) total_amount,
            COUNT(user_id) total_users
    FROM
        (SELECT spend_date,
                user_id,
                (CASE COUNT(DISTINCT platform)
                    WHEN 1 THEN platform
                    WHEN 2 THEN 'both'
                    END) platform,
                SUM(amount) amount
        FROM L_1127_Spending
        GROUP BY spend_date, user_id, platform
        ) b
    GROUP BY spend_date, platform
    ) bb
    ON aa.platform = bb.platform AND
    aa.spend_date = bb.spend_date
