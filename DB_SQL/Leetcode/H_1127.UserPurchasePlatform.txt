1127.(Hard) User Purchase Platform
https://leetcode.com/problems/user-purchase-platform

================================================================================
1127.(Hard) User Purchase Platform
================================================================================

Spending table:
+---------+------------+----------+--------+
| user_id | spend_date | platform | amount |
+---------+------------+----------+--------+
| 1       | 2019-07-01 | mobile   | 100    |
| 1       | 2019-07-01 | desktop  | 100    |
| 2       | 2019-07-01 | mobile   | 100    |
| 2       | 2019-07-02 | mobile   | 100    |
| 3       | 2019-07-01 | desktop  | 100    |
| 3       | 2019-07-02 | desktop  | 100    |
+---------+------------+----------+--------+

Result table:
+------------+----------+--------------+-------------+
| spend_date | platform | total_amount | total_users |
+------------+----------+--------------+-------------+
| 2019-07-01 | desktop  | 100          | 1           |
| 2019-07-01 | mobile   | 100          | 1           |
| 2019-07-01 | both     | 200          | 1           |
| 2019-07-02 | desktop  | 100          | 1           |
| 2019-07-02 | mobile   | 100          | 1           |
| 2019-07-02 | both     | 0            | 0           |
+------------+----------+--------------+-------------+


========================
schema:
========================
Create table H_1127_Spending (user_id int, spend_date Date,  platform varchar(30),  amount int);
Truncate table H_1127_Spending;
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (1, '2019-07-01', 'mobile', 100);
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (1, '2019-07-01', 'desktop', 100);
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (2, '2019-07-01', 'mobile', 100);
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (2, '2019-07-02', 'mobile', 100);
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (3, '2019-07-01', 'desktop', 100);
insert into H_1127_Spending (user_id, spend_date,  platform,  amount) values (3, '2019-07-02', 'desktop', 100);



========================
solution:
========================

========================
SQL SERVER
========================

step 1: report format table 

select distinct(spend_date), a.platform
from H_1127_Spending, 
(select 'both' as platform union select 'desktop' as platform union select 'mobile' as platform ) a 

step 2: 将同一个用户在同一天的平台数量统计出来

select spend_date, user_id, count(platform) as platform_number, sum(amount) as total_amount, min(platform) as platform
from H_1127_Spending
group by spend_date, user_id

step 3: 将平台数量为2的平台名字替换为both (用到第二步的查询作为临时表)

select spend_date, user_id, 
case when platform_number = 2 then 'both' else platform end as platform, 
total_amount 
from 
(select spend_date, user_id, count(platform) as platform_number, sum(amount) as total_amount, min(platform) as platform
from H_1127_Spending
group by spend_date, user_id) temp 

step 4: 将step1, step3的表做left join 

with mergedPlatform as (
select spend_date, user_id, 
case when platform_number = 2 then 'both' else platform end as platform, 
total_amount 
from 
(select spend_date, user_id, count(platform) as platform_number, sum(amount) as total_amount, min(platform) as platform
from H_1127_Spending
group by spend_date, user_id) temp ), 
reports as (
select distinct(spend_date), a.platform
from H_1127_Spending, 
(select 'both' as platform union select 'desktop' as platform union select 'mobile' as platform ) a 
)
select 
r.spend_date, r.platform, isnull(m.total_amount, 0) as total_amount, isnull(count(m.user_id), 0) as total_users
from reports r left join mergedPlatform m on r.spend_date = m.spend_date and r.platform = m.platform 
group by r.spend_date, r.platform, m.total_amount



========================
MYSQL:  ?????
========================

SELECT aa.spend_date,
       aa.platform,
       COALESCE(bb.total_amount, 0) total_amount,
       COALESCE(bb.total_users,0) total_users
FROM
    (SELECT DISTINCT(spend_date), a.platform   -- table aa
    FROM H_1127_Spending, 
        (SELECT 'desktop' AS platform UNION
        SELECT 'mobile' AS platform UNION
        SELECT 'both' AS platform
        ) a
    ) aa
    LEFT JOIN
    (SELECT spend_date,                      -- table bb
            platform,
            SUM(amount) total_amount,
            COUNT(user_id) total_users
    FROM
        (SELECT spend_date,
                user_id,
                (CASE COUNT(DISTINCT platform)
                    WHEN 1 THEN platform
                    WHEN 2 THEN 'both'
                    END) platform,
                SUM(amount) amount
        FROM H_1127_Spending
        GROUP BY spend_date, user_id, platform
        ) b
    GROUP BY spend_date, platform
    ) bb   ON aa.platform = bb.platform AND	aa.spend_date = bb.spend_date
order by  aa.spend_date
	


统计每天每个平台的交易额和用户数, "双平台同时消费的用户"分开统计.
难点: 1. 需要为platform字段构造一个'both'值, 这里用了CASE WHEN END语句 2. 即使某天没有"双平台同时消费的用户"也要显示
这里在"table aa"里组合了所有 spend_date 和 platform, 然后LEFT JOIN保证每天都有3个platform项
再用 COALESCE 语句把NULL值替换成0

SELECT aa.spend_date,
       aa.platform,
       COALESCE(bb.total_amount, 0) total_amount,
       COALESCE(bb.total_users,0) total_users
FROM
    (SELECT DISTINCT(spend_date), a.platform   -- table aa
    FROM H_1127_Spending JOIN
        (SELECT 'desktop' AS platform UNION
        SELECT 'mobile' AS platform UNION
        SELECT 'both' AS platform
        ) a
    ) aa
    LEFT JOIN
    (SELECT spend_date,                      -- table bb
            platform,
            SUM(amount) total_amount,
            COUNT(user_id) total_users
    FROM
        (SELECT spend_date,
                user_id,
                (CASE COUNT(DISTINCT platform)
                    WHEN 1 THEN platform
                    WHEN 2 THEN 'both'
                    END) platform,
                SUM(amount) amount
        FROM H_1127_Spending
        GROUP BY spend_date, user_id, platform
        ) b
    GROUP BY spend_date, platform
    ) bb
    ON aa.platform = bb.platform AND
    aa.spend_date = bb.spend_date
