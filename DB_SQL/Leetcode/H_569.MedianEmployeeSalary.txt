569. median-employee-salary/
https://leetcode.com/problems/median-employee-salary/

================================================================================
569.(Hard) 员工薪水中位数
================================================================================
Employee
+-----+------------+--------+
|Id   | Company    | Salary |
+-----+------------+--------+
|1    | A          | 2341   |
|2    | A          | 341    |
|3    | A          | 15     |
|4    | A          | 15314  |
|5    | A          | 451    |
|6    | A          | 513    |
|7    | B          | 15     |
|8    | B          | 13     |
|9    | B          | 1154   |
|10   | B          | 1345   |
|11   | B          | 1221   |
|12   | B          | 234    |
|13   | C          | 2345   |
|14   | C          | 2645   |
|15   | C          | 2645   |
|16   | C          | 2652   |
|17   | C          | 65     |
+-----+------------+--------+

Output
+-----+------------+--------+
|Id   | Company    | Salary |
+-----+------------+--------+
|5    | A          | 451    |
|6    | A          | 513    |
|12   | B          | 234    |
|9    | B          | 1154   |
|14   | C          | 2645   |
+-----+------------+--------+
median salary for each company

================================================================================
# schema 
================================================================================
Create table H_569_Employee (Id int, Company varchar(20), Salary int);
Truncate table H_569_Employee;
insert into H_569_Employee (Id, Company, Salary) values (1,  'A',  2341 );
insert into H_569_Employee (Id, Company, Salary) values (2,  'A',  341  );
insert into H_569_Employee (Id, Company, Salary) values (3,  'A',  15   );
insert into H_569_Employee (Id, Company, Salary) values (4,  'A',  15314);
insert into H_569_Employee (Id, Company, Salary) values (5,  'A',  451  );
insert into H_569_Employee (Id, Company, Salary) values (6,  'A',  513  );
insert into H_569_Employee (Id, Company, Salary) values (7,  'B',  15   );
insert into H_569_Employee (Id, Company, Salary) values (8,  'B',  13   );
insert into H_569_Employee (Id, Company, Salary) values (9,  'B',  1154 );
insert into H_569_Employee (Id, Company, Salary) values (10, 'B',  1345 );
insert into H_569_Employee (Id, Company, Salary) values (11, 'B',  1221 );
insert into H_569_Employee (Id, Company, Salary) values (12, 'B',  234  );
insert into H_569_Employee (Id, Company, Salary) values (13, 'C',  2345 );
insert into H_569_Employee (Id, Company, Salary) values (14, 'C',  2645 );
insert into H_569_Employee (Id, Company, Salary) values (15, 'C',  2645 );
insert into H_569_Employee (Id, Company, Salary) values (16, 'C',  2652 );
insert into H_569_Employee (Id, Company, Salary) values (17, 'C',  65   );


================================================================================
# SQL Server 
================================================================================

with base as (
	select 
		company, 
		id, 
		salary, 
		row_number() over (partition by company order by salary desc) as ranking 
	from H_569_Employee),
total as (
	select 
		company, 
		count(*) as total,
		(case when count(*) %2<>0 then  CEILING(count(*)*1.0/2)  else count(*) /2   end) as median1,
		(case when count(*) %2<>0 then  CEILING(count(*)*1.0/2)  else count(*) /2+1 end) as median2 
	from base
	group by company )
select 
	b.company, 
	b.id, 
	b.salary
from base b, total t 
where b.company = t.company 
and (b.ranking = t.median1 or b.ranking = t.median2)

================================================================================
# MYSQL  ??
================================================================================

SELECT
    a.Id,
    a.Company,
    a.Salary
FROM
    H_569_Employee a LEFT JOIN H_569_Employee b ON
    a.Company = b.Company
GROUP BY a.id
HAVING
    ABS(SUM(CASE
            WHEN a.Salary > b.Salary THEN -1  /*  小于当前 */
            WHEN a.Salary < b.Salary THEN 1   /* 大于当前  相互cancel out */
            WHEN a.Salary = b.Salary AND a.id < b.id THEN 1
            WHEN a.Salary = b.Salary AND a.id > b.id THEN -1 /* 相等时按id大小归+- */
            ELSE 0 END)) <= 1 /* 必须添加else 0否则单个records的情况会返回空表 */
ORDER BY  a.Company, a.Salary

