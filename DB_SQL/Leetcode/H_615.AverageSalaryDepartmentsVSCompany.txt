615.(Hard) Average Salary Departments VS Company
https://leetcode.com/problems/average-salary-departments-vs-company/

================================================================================
615.(Hard) Average Salary: Departments VS Company
================================================================================
每月 各部门平均薪资 vs 公司平均薪资
salary
| id | employee_id | amount | pay_date   |
|----|-------------|--------|------------|
| 1  | 1           | 9000   | 2017-03-31 |
| 2  | 2           | 6000   | 2017-03-31 |
| 3  | 3           | 10000  | 2017-03-31 |
| 4  | 1           | 7000   | 2017-02-28 |
| 5  | 2           | 6000   | 2017-02-28 |
| 6  | 3           | 8000   | 2017-02-28 |

employee
| employee_id | department_id |
|-------------|---------------|
| 1           | 1             |
| 2           | 2             |
| 3           | 2             |

Output
| pay_month | department_id | comparison  |
|-----------|---------------|-------------|
| 2017-03   | 1             | higher      |
| 2017-03   | 2             | lower       |
| 2017-02   | 1             | same        |
| 2017-02   | 2             | same        |

========================
schema:
========================
Create table L_615_salary (id int, employee_id int, amount int,  pay_date Date);
Truncate table L_615_salary;
insert into L_615_salary (id, employee_id, amount,  pay_date) values (1, 1, 9000,  '2017-03-31');
insert into L_615_salary (id, employee_id, amount,  pay_date) values (2, 2, 6000,  '2017-03-31');
insert into L_615_salary (id, employee_id, amount,  pay_date) values (3, 3, 10000, '2017-03-31');
insert into L_615_salary (id, employee_id, amount,  pay_date) values (4, 1, 7000,  '2017-02-28');
insert into L_615_salary (id, employee_id, amount,  pay_date) values (5, 2, 6000,  '2017-02-28');
insert into L_615_salary (id, employee_id, amount,  pay_date) values (6, 3, 8000,  '2017-02-28');

Create table employee_615 (employee_id int, department_id int);
Truncate table employee_615;
insert into employee_615 (employee_id, department_id) values (1, 1);
insert into employee_615 (employee_id, department_id) values (2, 2);
insert into employee_615 (employee_id, department_id) values (3, 2);

========================
solution:
========================
思路：本来用窗口函数可以省很多事，可惜leetcode的辣鸡环境mysql版本太低。 
1. subquery 1 取出每月各部门平均薪资 
2. subquery 2 取出每月公司平均薪资 
3. Join 1 and 2 on 月份 
4. 选出pay_month列，department_id列，comparison列用CASE语句生成。

========================
TSQL:
========================

subquery 1: 
SELECT
	FORMAT(pay_date, 'yyyy-MM') as pay_month,
	e.department_id,
	AVG(s.amount) as mean_sal
FROM L_615_salary s, employee_615 e
where s.employee_id = e.employee_id
group by FORMAT(pay_date, 'yyyy-MM'), department_id

subquery 2: 
SELECT
	FORMAT(pay_date, 'yyyy-MM') as pay_month,
	AVG(amount) as mean_sal
FROM L_615_salary 
group by FORMAT(pay_date, 'yyyy-MM')

final query:
select 
	s1.pay_month, 
	s1.department_id,
	(CASE
     WHEN s1.mean_sal > s2.mean_sal THEN 'higher'
     WHEN s1.mean_sal < s2.mean_sal THEN 'lower'
     ELSE 'same'
     END) as comparison
from 
(SELECT
	FORMAT(pay_date, 'yyyy-MM') as pay_month,
	e.department_id,
	AVG(s.amount) as mean_sal
FROM L_615_salary s, employee_615 e
where s.employee_id = e.employee_id
group by FORMAT(pay_date, 'yyyy-MM'), department_id) s1, 
(
SELECT
	FORMAT(pay_date, 'yyyy-MM') as pay_month,
	AVG(amount) as mean_sal
FROM L_615_salary 
group by FORMAT(pay_date, 'yyyy-MM')
) s2
where s1.pay_month = s2.pay_month
 
========================
MYSQL:
========================

SELECT
    dep.pay_month,
    dep.department_id,
    (CASE
     WHEN dep.mean_sal > com.mean_sal THEN "higher"
     WHEN dep.mean_sal < com.mean_sal THEN "lower"
     ELSE "same"
     END) comparison
FROM
    (SELECT
        DATE_FORMAT(pay_date, '%Y-%m') pay_month,
        e.department_id,
        AVG(s.amount) mean_sal
    FROM
        L_615_salary s JOIN employee_615 e ON
        s.employee_id = e.employee_id
    GROUP BY
        DATE_FORMAT(pay_date, '%Y-%m'),
        e.department_id
    ) as dep  -- subquery 1
    LEFT JOIN
    (SELECT
        DATE_FORMAT(pay_date, '%Y-%m') pay_month,
        AVG(s.amount) mean_sal
    FROM
        L_615_salary s JOIN employee_615 e ON
        s.employee_id = e.employee_id
    GROUP BY
        DATE_FORMAT(pay_date, '%Y-%m')
    ) as com --subquery 2
ON dep.pay_month = com.pay_month
ORDER BY
    dep.department_id
	
