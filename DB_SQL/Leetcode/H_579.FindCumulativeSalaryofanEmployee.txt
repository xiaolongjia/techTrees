579.Find Cumulative Salary of an Employee
https://leetcode.com/problems/find-cumulative-salary-of-an-employee/

================================================================================
579.(Hard) Find Cumulative Salary of an Employee
================================================================================
# 选出每个ID每个月的「过去三个月累计薪水」，排除最近的月份

Employee

| Id | Month | Salary |
|----|-------|--------|
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 1  | 2     | 30     |
| 2  | 2     | 30     |
| 3  | 2     | 40     |
| 1  | 3     | 40     |
| 3  | 3     | 60     |
| 1  | 4     | 60     |
| 3  | 4     | 70     |

Output

| Id | Month | Salary |
|----|-------|--------|
| 1  | 3     | 90     |
| 1  | 2     | 50     |
| 1  | 1     | 20     |
| 2  | 1     | 20     |
| 3  | 3     | 100    |
| 3  | 2     | 40     |

========================
schema:
========================
Create table  L_579_Employee (Id int, Month int, Salary int)
Truncate table L_579_Employee
insert into L_579_Employee (Id, Month, Salary) values (1, 1, 20)
insert into L_579_Employee (Id, Month, Salary) values (2, 1, 20)
insert into L_579_Employee (Id, Month, Salary) values (1, 2, 30)
insert into L_579_Employee (Id, Month, Salary) values (2, 2, 30)
insert into L_579_Employee (Id, Month, Salary) values (3, 2, 40)
insert into L_579_Employee (Id, Month, Salary) values (1, 3, 40)
insert into L_579_Employee (Id, Month, Salary) values (3, 3, 60)
insert into L_579_Employee (Id, Month, Salary) values (1, 4, 60)
insert into L_579_Employee (Id, Month, Salary) values (3, 4, 70)


========================
solution:
========================

========================
MYSQL:
========================

SELECT
    a.id,
    a.month,
    SUM(b.salary) Salary
FROM
    L_579_Employee a JOIN L_579_Employee b ON
    a.id = b.id AND
    a.month - b.month >= 0 AND
    a.month - b.month < 3
GROUP BY
    a.id, a.month
HAVING
    (a.id, a.month) NOT IN (SELECT id, MAX(month) FROM L_579_Employee GROUP BY id)
ORDER BY
    a.id, a.month DESC

========================
TSQL:
========================

select t1.* from 
( SELECT
    a.id,
    a.month,
    SUM(b.salary) as Salary
FROM
    L_579_Employee a JOIN L_579_Employee b ON
    a.id = b.id AND
    a.month - b.month >= 0 AND
    a.month - b.month < 3
GROUP BY
    a.id, a.month
)   t1, 
(select id, max(month) as month  
from L_579_Employee
group by id ) t2
where t1.id = t2.id 
and t1.month != t2.month 
ORDER BY t1.id, t1.month DESC
