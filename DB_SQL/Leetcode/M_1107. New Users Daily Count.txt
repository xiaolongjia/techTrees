1107.(Medium) New Users Daily Count

Write an SQL query that reports for every date within at most 90 days from today, 
the number of users that logged in for the first time on that date. Assume today is 2019-06-30.
最近90天内每天「新用户」登录的数量。

Traffic table:

+---------+----------+---------------+
| user_id | activity | activity_date |
+---------+----------+---------------+
| 1       | login    | 2019-05-01    |
| 1       | homepage | 2019-05-01    |
| 1       | logout   | 2019-05-01    |
| 2       | login    | 2019-06-21    |
| 2       | logout   | 2019-06-21    |
| 3       | login    | 2019-01-01    |
| 3       | jobs     | 2019-01-01    |
| 3       | logout   | 2019-01-01    |
| 4       | login    | 2019-06-21    |
| 4       | groups   | 2019-06-21    |
| 4       | logout   | 2019-06-21    |
| 5       | login    | 2019-03-01    |
| 5       | logout   | 2019-03-01    |
| 5       | login    | 2019-06-21    |
| 5       | logout   | 2019-06-21    |
+---------+----------+---------------+

Result table:
+------------+-------------+
| login_date | user_count  |
+------------+-------------+
| 2019-05-01 | 1           |
| 2019-06-21 | 2           |
+------------+-------------+


========================
schema:
========================
drop table M_1107_Traffic

create table M_1107_Traffic (user_id int ,  activity varchar(50), activity_date date);
insert into M_1107_Traffic (user_id ,  activity , activity_date)
values
(1 , 'login',    '2019-05-01'),
(1 , 'homepage', '2019-05-01'),
(1 , 'logout',   '2019-05-01'),
(2 , 'login',    '2019-06-21'),
(2 , 'logout',   '2019-06-21'),
(3 , 'login',    '2019-01-01'),
(3 , 'jobs',     '2019-01-01'),
(3 , 'logout',   '2019-01-01'),
(4 , 'login',    '2019-06-21'),
(4 , 'groups',   '2019-06-21'),
(4 , 'logout',   '2019-06-21'),
(5 , 'login',    '2019-03-01'),
(5 , 'logout',   '2019-03-01'),
(5 , 'login',    '2019-06-21'),
(5 , 'logout',   '2019-06-21');



========================
solution:
========================

========================
SQL Server
========================

select 
	loginTime,
	count(*) as user_count
from 
	(select user_id, min(activity_date) loginTime 
	from M_1107_Traffic
	where activity = 'login'
	group by user_id ) temp 
where loginTime < '2019-06-30' 
and loginTime > dateadd(day, -90, '2019-06-30')
group by loginTime

